{"version":3,"sources":["forms/registerForm.js","forms/loginForm.js","service/login.js","service/register.js","service/blogs.js","App.js","reportWebVitals.js","index.js"],"names":["RegisterForm","handleRegister","name","setName","username","setUsername","password","setPassword","registerVisible","loginVisible","cancel","onSubmit","className","required","type","value","onChange","target","style","display","onClick","LoginForm","handleLogin","LoginUser","userInfo","a","axios","post","login","data","console","log","message","RegisterUser","response","baseUrl","token","forExport","getAll","get","create","newObject","config","headers","Authorization","setToken","newToken","deleteBlog","id","userId","delete","update","put","then","findOne","unlike","App","useState","setLoginVisible","setRegisterVisible","showButtons","setShowButtons","showForms","setShowForms","userLogined","setUserLogined","user","setUser","setErrorMessage","setSuccesMessage","blogs","setBlogs","title","setTitle","newBlog","setNewBlog","author","setAuthor","createTitleVisible","setCreateTitleVisible","createBlogVisible","setCreateBlogVisible","allBlogs","setAllBlogs","useEffect","fetch","setTimeout","startingPosition","blogsToShow","filter","filt","sort","b","likes","loggedUserJSON","window","localStorage","getItem","JSON","parse","BlogService","clear","event","preventDefault","length","undefined","setItem","stringify","addBlog","newObj","blog","handleDelete","confirm","editDelete","like","bg","likerUsers","push","placeholder","rows","cols","map","includes","color","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3e9a6bd8.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst RegisterForm = ({\r\n    handleRegister,\r\n    name,setName,\r\n    username,setUsername,\r\n    password,setPassword,\r\n    registerVisible,loginVisible,cancel\r\n}) => {\r\n    return(\r\n            <form onSubmit={handleRegister}>\r\n        \r\n            <div className='registerName'>\r\n             <input required className='registerName-input' type='text' name='name' value={name} onChange={({target})=> setName(target.value)} />\r\n                <label className='registerName-label'>\r\n                    <span className='registerName-span'>name</span>\r\n                 </label>\r\n            </div>\r\n            <div className='registerUsername'>\r\n              <input required className='registerUsername-input' name='username' value={username} onChange={({target}) => setUsername(target.value)} />\r\n                <label className='registerUsername-label'>\r\n                    <span className='registerUsername-span'>username</span>\r\n                </label>\r\n            </div>\r\n              <div className='registerPassword'>\r\n                  <input required className='registerPassword-input' type='password' name='password' value={password} onChange={({target}) => setPassword(target.value)} />\r\n                <label className='registerPassword-label'>\r\n                    <span className='registerPassword-span'>password</span>\r\n                </label>\r\n             </div>  \r\n       \r\n        <button type='submit' > Register</button>          \r\n              \r\n        <div style={{display:registerVisible? '': loginVisible? '': 'none'}}><button className='cancel' onClick={cancel}>Cansel</button></div>\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default RegisterForm","import React from 'react'\r\n\r\n\r\nconst LoginForm = ({\r\n    handleLogin,\r\n    username,setUsername,\r\n    password,setPassword,\r\n    registerVisible,loginVisible,cancel\r\n}) => {\r\n    return(\r\n        <form onSubmit={handleLogin} className='loginForm'>\r\n         <div className='loginUsername'>\r\n            <input required className='loginUsername-input'  name='username' value={username} onChange={({target}) => setUsername(target.value)} />\r\n         <label className='loginUsername-label'>\r\n             <span className='loginUsername-span' >username</span>\r\n         </label>\r\n         </div>\r\n            <div className='loginPassword'>\r\n                <input required className='loginPassword-input' type='password' name='password' value={password} onChange={({target}) => setPassword(target.value)} />\r\n                <label className='loginPassword-label'>\r\n                    <span className='loginPassword-span'>password</span>\r\n                </label>\r\n            </div>\r\n            <br />\r\n              <button type='submit' >Login</button>\r\n              <div style={{display:registerVisible? '': loginVisible? '': 'none'}}><button className='cancel' onClick={cancel}>Cansel</button></div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default LoginForm","import axios from 'axios';\r\nconst baseUrl = '/api/login'\r\n\r\nlet testUrl = 'http://localhost:3001/api/login';\r\n\r\n\r\nconst LoginUser = async (userInfo) => {\r\n    try{\r\n        let login  = await axios.post(baseUrl, userInfo)\r\n            return login.data\r\n    } catch(err){\r\n        return console.log(err.message)\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default LoginUser","import axios from 'axios';\r\n\r\nconst baseUrl = '/api/users';\r\nlet testUrl = 'http://localhost:3001/api/users';\r\n\r\nconst RegisterUser = async (userInfo) => {\r\n    \r\n    try{\r\n        let response  = axios.post(baseUrl, userInfo)\r\n        return response\r\n    } catch(err){\r\n        return 'registered error'\r\n    }\r\n}\r\n\r\nexport default RegisterUser","import axios from 'axios';\r\nconst baseUrl = '/api/blogs';\r\n\r\n\r\nlet token = null;\r\n\r\nconst setToken = newToken => {\r\n    token = `bearer ${newToken}`\r\n  };\r\n\r\n\r\n\r\nconst getAll = async () => {\r\n    let response = await axios.get(baseUrl)\r\n    return response.data\r\n};\r\n\r\nconst create = async newObject => {\r\n    const config = {\r\n      headers: { Authorization: token },\r\n    }\r\n  \r\n    const response = await axios.post(baseUrl, newObject, config)\r\n    return response.data\r\n  };\r\n  const deleteBlog = async (id, userId) => {\r\n     return await axios.delete(`${baseUrl}/${id}/${userId}`)\r\n  }\r\n\r\n  const update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n  }\r\n\r\n  const findOne = async (id) => {\r\n    const response = await axios.get(`${baseUrl}/${id}`)\r\n    return response.data\r\n  }\r\n\r\n  const unlike = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}/unlike`, newObject)\r\n    return request.then(response => response.data)\r\n  }\r\n  \r\n\r\n  const forExport = {getAll, create, setToken, deleteBlog, update, findOne, unlike}\r\n\r\nexport default forExport","import {  useEffect, useState } from 'react'\nimport './App.css'\nimport './login.css'\nimport './register.css'\nimport './mobile.css'\nimport RegisterForm from './forms/registerForm'\nimport LoginForm from './forms/loginForm'\nimport LoginUser from './service/login'\nimport RegisterUser from './service/register'\nimport BlogService from './service/blogs'\nimport { AiFillHeart } from 'react-icons/ai'\nimport { AiOutlineHeart } from 'react-icons/ai'\nimport { FaBloggerB } from 'react-icons/fa'\nimport { GrLogout } from 'react-icons/gr'\nimport { GrLogin } from 'react-icons/gr'\n\n\n\nfunction App() {\n  const [name, setName] = useState('')\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [loginVisible, setLoginVisible] =useState(false)\n  const [registerVisible, setRegisterVisible] = useState(false)\n  const [showButtons, setShowButtons] =useState(true)\n  const [showForms, setShowForms] = useState(true)\n  const [userLogined, setUserLogined] = useState(false)\n  const [user, setUser] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [succesMessage, setSuccesMessage] = useState(null)\n  const [blogs, setBlogs] = useState([])\n  const [title, setTitle] = useState('')\n  const [newBlog, setNewBlog] = useState('')\n  const [author, setAuthor] = useState('')\n  const [createTitleVisible, setCreateTitleVisible] = useState(false)\n  const [createBlogVisible, setCreateBlogVisible] =useState(false)\n  const [allBlogs, setAllBlogs] = useState(true)\n\n  useEffect(() => {\n    fetch()\n  },[])\n  useEffect(() => {\n    setTimeout(() => {\n      startingPosition()\n    },18000000)\n  },[user])\n\n\n  let blogsToShow = allBlogs ? blogs: blogs.filter(filt => filt.user.username===user.username)\n  blogsToShow.sort((a,b) => {\n    return b.likes-a.likes\n  })\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      BlogService.setToken(user.token)\n      setShowForms(false)\n     setUserLogined(true)\n     }\n  }, []) \n  const fetch = async () => {\n   try{\n    let data = await BlogService.getAll()\n    setBlogs(data)\n   }catch(err){\n     console.log(err.message, '  this is fucking error message')\n   }\n  };\n\n  const startingPosition = () => {\n    setLoginVisible(false);\n    setRegisterVisible(false) ;\n    setShowButtons(true);\n    setShowForms(true);\n    setUserLogined(false);\n    setUser(null);\n    setErrorMessage('');\n    setName('');\n    setUsername('');\n    setPassword('');\n    setNewBlog('');\n    setTitle('');\n    setAuthor('');\n    window.localStorage.clear();\n  };\n\n  \n\n  const handleRegister = async (event) => {\n    event.preventDefault();\n   \n    try{\n      let user = {name,username,password};\n      if(!username || !name) {\n        setTimeout(() => {\n          setErrorMessage(null)\n        },3000)\n        return(\n          setErrorMessage('Please fill out fields')\n        )\n      }\n      if(password.length <=5 ){\n        setTimeout(() => {\n          setErrorMessage(null)\n        },3000)\n        return(\n          setErrorMessage('Password must be minimum 5 characters')\n        )\n      }\n     await RegisterUser(user);\n     startingPosition()\n      setTimeout(() => {\n          setSuccesMessage(null)\n      }, 3000)\n        setSuccesMessage('You registered succesfuly')\n    }catch(err){\n      setTimeout(() => {\n        setErrorMessage(null)\n      },3000)  \n      setErrorMessage('This username already exists')\n\n      setName('');\n     setUsername('');\n      setPassword('');\n    }\n\n    \n  };\n\n  const login = () => {\n    return(\n      <LoginForm \n      registerVisible={registerVisible}\n      loginVisible={loginVisible}\n      cancel={cancel}\n      username={username}\n      password={password}\n      handleLogin={handleLogin}\n      setUsername={setUsername}\n      setPassword={setPassword} \n      />\n    );\n  };\n\n  const handleLogin = async (event) => {\n    event.preventDefault();\n   try{\n     let user= await LoginUser({username,password});\n     setUsername(''); setPassword('');\n    if(user === undefined){\n      setTimeout(() => {\n        setErrorMessage(null)\n      },3000)\n      return(\n        setErrorMessage('Invalid username or password')\n      )\n    }\n    setShowForms(false)\n    setUserLogined(true)\n\n    BlogService.setToken(user.token)\n      window.localStorage.setItem(\n        'loggedUser', JSON.stringify(user)\n      ) \n     \n      setUser(user)\n      setUsername('')\n      setPassword('')\n\n   }catch(err){\n      setUsername(''); setPassword('');\n   }\n  };\n\n  const register  = () => {\n    return(\n      <RegisterForm \n      registerVisible={registerVisible}\n      loginVisible={loginVisible}\n         cancel={cancel}\n        name={name}\n        username={username}\n        password={password}\n        handleRegister={handleRegister}\n        setName={setName}\n        setUsername={setUsername}\n        setPassword={setPassword} />\n    );\n  };\n\n  const addBlog = async () => {\n    let newObj = {\n      blog: newBlog,\n      title:title,\n      author:author\n    }\n    try{\n      await BlogService.create(newObj)\n      fetch();\n      setTitle('');\n      setNewBlog('');\n      setAuthor('');\n      setCreateTitleVisible(false)\n      setCreateBlogVisible(false)\n      setSuccesMessage('added successfully')\n      setTimeout(() => {\n        setSuccesMessage(null)\n      })\n    }catch(err){\n      if(err.message === 'Request failed with status code 404'){\n        setErrorMessage('Time expired')\n        setTimeout(() => {\n          setErrorMessage(null)\n        },3000)\n       \n      }\n      setTitle('');\n      setNewBlog('');\n      setAuthor('');\n      setErrorMessage('Please fill out fields')\n      setTimeout(() => {\n        setErrorMessage(null)\n      },3000)\n    }\n  }\n\n  let showRegister = () => {\n    setRegisterVisible(true);\n    setLoginVisible(false);\n    setShowButtons(false);\n  };\n  let showLogin = () => {\n    setLoginVisible(true);\n    setRegisterVisible(false);\n    setShowButtons(false);\n  };\n  let cancel = () => {\n    startingPosition()\n  };\n  const handleDelete = async (id, token) => {\n    if (!window.confirm(\"Do you really want to delete?\"))return \n    try{\n     await BlogService.deleteBlog(id, token)\n      fetch()\n    }catch(err){\n      setTimeout(() => {\n        setErrorMessage(null)\n      },3000)\n      setErrorMessage('error')\n    }\n  }\n  \n\n  \n\n\n  let editDelete = (blog) => {\n    if(user){\n      if(blog.user.username === user.username){\n        return(\n          <div className='deleteDiv'>\n            <button onClick={()=> handleDelete(blog.id,user.token)}>delete</button>\n          </div>\n        )\n      }\n    }\n  }\n \n  let like = async (bg) => {\n     await bg.likerUsers.push(user.id)\n     await BlogService.update(bg.id, {\n    like:bg.likes,\n    token: user.token\n  })\n    fetch()\n        return\n  }\n  \n  let unlike = async (bg) => {\n    bg.likerUsers = await bg.likerUsers.filter(filt => filt !==user.id)\n    await BlogService.unlike(bg.id, {\n     like:bg.likes,\n     token: user.token\n   })\n     fetch()\n         return\n  }\n\n\n\n\n  return (\n    <div className=\"App\">\n      <div className='formDiv' style={{display: showForms?'':'none'}}>\n        <div className='logo' ></div>\n          <div className='formsDivInside'>\n            <div style={{display:showButtons? '':'none'}}><button onClick={showRegister}>Register</button></div>\n            <div style={{display:showButtons?'': 'none'}}><button onClick={showLogin}>Login</button></div>\n            <div style={{display:loginVisible?'':'none'}}>{login()}</div>\n            <div style={{display:registerVisible? '':'none'}}>{register()}</div>\n          </div>\n        </div>\n      <div className='loginedUserDiv' style={{display:userLogined?'':'none'}}>\n       <div className='userNameDiv'>\n         <div className='logo' ></div>\n          <div className='user'>\n            <div className='loggedIn'>\n            <p className='name' >{user?user.name  :null} is logged in</p>\n            <p className='username'>{user?user.username:null}</p>\n            <p className='create' onClick={() => {\n            setCreateTitleVisible(true)\n            setCreateBlogVisible(false)\n          }}>  Create Your  <span className='B'> <FaBloggerB /></span>log</p>\n           <p className='create' onClick={() => {\n            setAllBlogs(false)\n          }} >show your <span className='B'> <FaBloggerB /></span>log</p>\n           <p className='create' onClick={() => {\n            setAllBlogs(true)\n          }}>show all  <span className='B'> <FaBloggerB /></span>log</p>\n          <button onClick={startingPosition}><span><GrLogout /></span>Log out</button>\n          </div>\n      </div>\n    </div>\n        <div className='createBlogDiv'>\n          <div className='createBlogDiv1' style={{display: createTitleVisible? '': 'none'}}>\n           <input className='titleInput' placeholder='Title' name='title' value={title} onChange={({target})=>setTitle(target.value)} />   \n            <div className='next'>\n             <p onClick={()=>{\n                setCreateTitleVisible(false)\n                setCreateBlogVisible(true)\n              } }>Next</p>\n              <p onClick={() => setCreateTitleVisible(false)}>Cancel</p>\n          </div>\n          </div>\n          <div style={{display: createBlogVisible? '': 'none'}}>\n            <textarea rows='10'cols='30' placeholder='Blog'  name='blog' value={newBlog} onChange={({target})=>setNewBlog(target.value)} ></textarea>\n            <br />\n            <button onClick={addBlog} >add</button>\n            <button onClick={() => {\n              setCreateBlogVisible(false)\n              setCreateTitleVisible(false)\n            }} >Cansel</button>\n          </div>\n        </div>\n</div>\n      <div className='blogsDiv1' >\n        <ul>\n          {blogsToShow.map((bg) => {\n            return(\n              <div className='blogsDiv' key={bg.id}>\n                 <li className='blogsList' key={bg.id}>\n                {editDelete(bg)}\n                  <p className='title'>{bg.title}</p>\n                  <p className='blog'>{bg.blog}</p>\n              <div className='likesDiv'>\n              <div className='likesDiv1'>\n              {user?bg.likerUsers.includes(user.id)\n                ? <p className='unlike' onClick={()=>unlike(bg)} ><AiFillHeart className='heart'  color='red' /></p>\n                : <p className='like' onClick={()=>like(bg)}><AiOutlineHeart className='heart'  /></p>:''}\n                {!user\n                ? <p className='unlike' ><AiFillHeart  className='heart' /></p>\n                : null}\n                  <p className='likes'>{bg.likes}  likes</p>\n              </div>\n                <div >\n                  <p className='author' >author {bg.user.username}</p>\n                </div>\n              </div>\n                </li>\n              </div>\n            )\n          })}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}